1) Scenario 1: 
	Step 1: Add a file to staging area: git add Document.txt
	Step 2: git commit -m "Initial Version added"
2) Scenario 2:
	Step 1: Add a file to stating area: git add Document.txt
	Step 2: Remove file from staging area: git reset HEAD Document.txt
3) Scenario 3:
	Step 1: Add a file to staging area: git add Document.txt
	Step 2: git commit -m "Initial Version added"
	Step 3: git rm Document.txt
	Step 4: git commit -m "Removed the Document.txt"
4) Comparing file in Working directory and staging area
	git diff
5) Comparing file in Repository and staging area
	git diff --staged
	
Branching:
==================
The First check in called the Master.
We create a new Branch: git checkout -b feature1
Add a file to branch feature 1: git add feature1.txt
Commit it
Update the file Feature1.txt.
Add the file to branch feature1: git add feature1.txt
Commit it.


We create a new Brach: git checkout -b hotfix1
Update the Production.txt:git add Production.txt
Commit it
Update the Production.txt: git add Production.txt
Commit it
Merge production and hotfix1
Step 1: git checkout master
Step 2: git merge hotfix1 -m "Mergeed hotfix1 with Master"


Merge Production and Feature1
Step 1: git checkout master
Step 2: git merge Feature1 -m "Merged Feature1 with Master"

To delete a Branch

git branch --merged
git branch --no-merged


To Revert to a earlier
====================== 
git revert <commit id>
Hint: After reverting if the revert version has already been pushed. Then push the reverted version to the remote repository.


To publish to remote
=====================
git push  origin master


To get log of changes
=====================
git log --pretty=format:"%h %s" --graph

To get difference between local and remote
=============================
git diff master origin/master











	
	
	